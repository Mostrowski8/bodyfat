{"version":3,"sources":["reducer/Context.js","reducer/Reducer.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","newState","type","_action$payload","payload","value","name","isNaN","Object","objectSpread","submit","forms","forEach","form","sex","newForms","innerText","filter","concat","toConsumableArray","sexPickerOpen","appBarOpen","modalOpen","result","age","find","sum","reduce","a","b","Number","toFixed","initialState","Calc","_ref","dispatch","useContext","inputdone","undefined","e","react_default","createElement","class","className","App_SexPicker","App_Formfields","onClick","Formfields","_ref2","map","index","key","style","justifyContent","min","max","onChange","parseInt","target","color","marginTop","SexPicker","_ref3","ButtonDropdown","direction","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","divider","Appbar","_ref4","objectWithoutProperties","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","App_InfoModal","NavLink","InfoModal","_ref5","cursor","Modal","ModalHeader","ModalBody","rel","App","_useReducer","useReducer","_useReducer2","slicedToArray","minHeight","reducer_Context","Provider","App_Appbar","App_Calc","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20ad89f6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","export default function reducer(state, action) {\r\n  let newState;\r\n  switch (action.type) {\r\n    case \"handleInputFieldChange\":\r\n      //console.log(action.type, action.payload);\r\n      let {\r\n        value,\r\n        name\r\n      } = action.payload;\r\n      if (value > 99 || value < 0) return state;\r\n      if (isNaN(value) === true) value = \"\";\r\n      newState = {\r\n        ...state,\r\n        submit: false\r\n      };\r\n      newState.forms.forEach((form) => {\r\n        if (form.name === name) form.value = value;\r\n      });\r\n      //console.log(\"newState\", newState);\r\n      return newState\r\n    case \"sexChange\":\r\n      //console.log(action.type, action.payload, action.payload.innerText);\r\n      let sex;\r\n      action.payload.innerText === \"Male\" ? sex = true : sex = false;\r\n      if (sex === state.sex) return {\r\n        ...state\r\n      };\r\n      newState = {\r\n        ...state\r\n      }\r\n      let newForms;\r\n      if (sex === true) {\r\n        newForms = newState.forms.filter((form) => {\r\n          return form.name !== \"hips\" && form.name !== \"tricep\"\r\n        })\r\n        newState = {\r\n          ...state,\r\n          sex,\r\n          submit: false,\r\n          forms: [...newForms, {\r\n            name: \"chest\",\r\n            value: \"\"\r\n          }, {\r\n            name: \"stomach\",\r\n            value: \"\"\r\n          }]\r\n        }\r\n      } else {\r\n        newForms = newState.forms.filter((form) => {\r\n          return form.name !== \"chest\" && form.name !== \"stomach\"\r\n        })\r\n        newState = {\r\n          ...state,\r\n          sex,\r\n          submit: false,\r\n          forms: [...newForms, {\r\n            name: \"hips\",\r\n            value: \"\"\r\n          }, {\r\n            name: \"tricep\",\r\n            value: \"\"\r\n          }]\r\n        }\r\n      }\r\n      //console.log(\"newState\", newState);\r\n      return newState;\r\n    case \"toggle\":\r\n      //console.log(action.type, action.payload);\r\n      switch (action.payload) {\r\n        case \"sexpicker\":\r\n          let sexPickerOpen = !state.sexPickerOpen;\r\n          newState = {\r\n            ...state,\r\n            sexPickerOpen\r\n          };\r\n          //console.log(\"newState\", newState);\r\n          break;\r\n        case \"appbar\":\r\n          let appBarOpen = !state.appBarOpen;\r\n          newState = {\r\n            ...state,\r\n            appBarOpen\r\n          };\r\n          //console.log(\"newState\", newState);\r\n          break;\r\n        case \"modal\":\r\n          let modalOpen = !state.modalOpen;\r\n          newState = {\r\n            ...state,\r\n            modalOpen\r\n          };\r\n          //console.log(\"newState\", newState);\r\n          break;\r\n        default:\r\n          //console.log(\"Wrong payload\")\r\n      }\r\n      return newState;\r\n    case \"submit\":\r\n      //console.log(action.type, action.payload);\r\n      newState = {\r\n        ...state,\r\n        submit: true\r\n      };\r\n      //console.log(\"newState\", newState);\r\n      return newState;\r\n    case \"calculate\":\r\n      //console.log(action.type, action.payload);\r\n      let result;\r\n      let age = state.forms.find((form) => {\r\n        return form.name === \"age\"\r\n      }).value;\r\n      let sum = state.forms.filter((form) => {\r\n        return form.name !== \"age\"\r\n      }).reduce((a, b) => ({\r\n        value: Number(a.value) + Number(b.value)\r\n      }));\r\n\r\n      //console.log(\"SUM\", sum)\r\n      if (state.sex === true) {\r\n        result = ((457 / (1.1093800 - (0.0008267 * sum.value)) + (0.0000016 * (sum.value * 2)) - (0.0002574 * Number(age))) - 414.2).toFixed(2);\r\n\r\n      } else {\r\n        result = ((457 / (1.099421 - (0.0009929 * sum.value)) + (0.0000023 * (sum.value * 2)) - (0.0001392 * Number(age))) - 414.2).toFixed(2);\r\n\r\n      }\r\n      if (result > 50 || result < 0) result = \"over 50\"\r\n      //console.log(\"RESULT\", result)\r\n      newState = {\r\n        ...state,\r\n        result: result\r\n      };\r\n      //console.log(\"newState\", newState);\r\n      return newState;\r\n    default:\r\n      //console.log(\"sumtin went rong\", action.type, action.payload);\r\n  }\r\n}\r\n","import 'core-js/es6/';\nimport React, { useReducer, useContext} from 'react';\nimport Context from './reducer/Context';\nimport reducer from './reducer/Reducer';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Collapse, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nlet initialState = {\n  forms: [\n    {name: \"age\",\n    value: \"\"},\n    {name: \"thigh\",\n      value : \"\"},\n    {name: \"chest\",\n      value : \"\"}, \n    {name: \"stomach\",\n      value: \"\"} \n  ],\n  sex: true,\n  sexPickerOpen: false,\n  appBarOpen: false,\n  submit: false,\n  result: null,\n  modalOpen: false\n};\n\nconst App = () => {\n  let [state, dispatch] = useReducer(reducer, initialState);\n  return (\n  <div style={{minHeight: \"100%\"}}>\n  <Context.Provider value={dispatch}>\n  <Appbar {...state}/>\n        <Calc {...state} />\n  </Context.Provider>     \n        </div>\n      ) \n  }\n\nconst Calc = ({result, sex, forms, submit, sexPickerOpen}) => {\nconst dispatch = useContext(Context);\nlet inputdone =  forms.find((e) => {return e.value === '' || e.value === 0}) !== undefined ? false : true;\n    return(\n<div class=\"background\">\n      <div class=\"gradient\">\n        <div className=\"container\">\n        {!inputdone && <div className=\"row\"><div className=\"col-sm instruction\">Please enter your age and size of skin folds on input areas</div></div>}\n        <div className=\"row\">\n            <div className=\"col-sm text-center\">\n              <label className=\"label\">sex</label>\n              <SexPicker sex={sex} sexPickerOpen={sexPickerOpen}/>\n            </div>     \n          </div> \n          <Formfields sex={sex} forms={forms}/>\n          {inputdone && !submit && <button className=\"buttonfat\" onClick={()=>{dispatch({type:\"submit\"});dispatch({type:\"calculate\"}); }}>Calculate body fat</button>}\n          {submit && <div className=\"row\"><div className=\"col-sm bodyfat\">{\"Body fat \" + result + \"%\"}</div></div>}\n          </div> \n      </div>\n      </div>\n    )\n  }\n\nconst Formfields = ({forms}) => {\nconst dispatch = useContext(Context);\nconst Formfields = forms.map((form, index)=>{\nreturn <div key={form.name} style={{justifyContent:\"center\"}} className=\"col-12 text-center\">\n<div style={{justifyContent:\"center\"}} className=\"row text-center\">\n<label className=\"col-xs-6 col-sm-6 label\">{form.name}</label>\n<div className=\"col-xs-6 col-sm-6 inputfield\" ><input name={form.name} className=\"input\" min={1} max={99} value={form.value} type=\"number\" onChange={(e)=>{dispatch({type:\"handleInputFieldChange\", payload:{value: parseInt(e.target.value), name:e.target.name}})}}></input>{form.name!==\"age\"&&<span style={{color: \"white\"}}>mm<span/></span>}</div>\n</div>\n</div>\n});\n  return (\n    <div style={{marginTop:\"20px\"}} className=\"row text-center\">\n{Formfields}\n    </div>\n  )\n}\n\nconst SexPicker = ({sexPickerOpen, sex}) => {\n const dispatch = useContext(Context);\n    return (\n      <ButtonDropdown direction={\"up\"} isOpen={sexPickerOpen} toggle={()=>{dispatch({type:\"toggle\", payload:\"sexpicker\"})}}>\n        <DropdownToggle  caret>\n          {sex? \"Male\":\"Female\"}\n        </DropdownToggle>\n        <DropdownMenu className={\"dropDownMenu\"}>\n          <DropdownItem className={\"dropdownItem\"} onClick={(e)=>{dispatch({type:\"sexChange\", payload:e.target})}}>Male</DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem className={\"dropdownItem\"} onClick={(e)=>{dispatch({type:\"sexChange\", payload:e.target})}}>Female</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    ); \n}\n\nconst Appbar = ({appBarOpen, modalOpen, sex, ...rest}) => {\n  const dispatch = useContext(Context);\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand href=\"/\">Bodyfat claculator</NavbarBrand>\n          <NavbarToggler onClick={(e)=>{dispatch({type:\"toggle\", payload:\"appbar\"})}}/>\n          <Collapse isOpen={appBarOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <InfoModal modalOpen={modalOpen} sex={sex}/>\n              </NavItem>\n              <NavItem>\n                <NavLink target=\"_blank\" href=\"https://github.com/Mostrowski8/bodyfat\">GitHub</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n}\n\nconst InfoModal = ({modalOpen, sex}) => {\n  const dispatch = useContext(Context);\n    return (\n      <div>\n        <NavLink style={{cursor:\"pointer\"}} onClick={()=>{dispatch({type:\"toggle\", payload:\"modal\"})}}>Info</NavLink>\n        <Modal isOpen={modalOpen} toggle={()=>{dispatch({type:\"toggle\", payload:\"modal\"})}}>\n          <ModalHeader toggle={()=>{dispatch({type:\"toggle\", payload:\"modal\"})}}>Info</ModalHeader>\n          <ModalBody>\n          <p>The formula has been taken from <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.sfd.pl/Zmierz_dok%C5%82adnie_sw%C3%B3j_poziom_t%C5%82uszczu-czyli_wielopartyjna_metoda_pomiaru_fa%C5%82domierzem-t263219.html\">this page</a>.</p>\n          <p>It is based on skinfold measurement method <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.ptdirect.com/training-delivery/client-assessment/taking-skin-fold-body-fat-measurements\">described here</a>.</p>\n          <p>Measurements have to be taken from:</p>\n          <ul>\n          <li>{(sex)? \"Your chest area\":\"Your triceps area\"}</li>\n          <li>{(sex)? \"Your stomach area\":\"Your hip area\"}</li>  \n          <li>Your thigh area</li>    \n          </ul> \n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}